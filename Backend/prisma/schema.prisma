generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Book {
  book_id            Int        @id @default(autoincrement())
  book_name          String
  book_cat_id        Int
  book_collection_id Int
  book_launch_date   DateTime
  book_publisher     String
  category           Category   @relation("BookCategory", fields: [book_cat_id], references: [cat_id])
  collection         Collection @relation("BookCollection", fields: [book_collection_id], references: [collection_id])
  record_issuances   Issuance[] @relation("BookToIssuance")
}

model Category {
  cat_id       Int    @id @default(autoincrement())
  cat_name     String
  sub_cat_name String
  books        Book[] @relation("BookCategory")
}

model Collection {
  collection_id   Int    @id @default(autoincrement())
  collection_name String
  books           Book[] @relation("BookCollection")
}

model Member {
  mem_id           Int          @id @default(autoincrement())
  mem_name         String
  mem_phone        String
  mem_email        String
  record_issuances Issuance[]   @relation("MemberToIssuance")
  memberships      Membership[]
}

model Issuance {
  issuance_id        Int      @id @default(autoincrement())
  book_id            Int
  issuance_member    Int
  issuance_date      DateTime
  issued_by          String
  target_return_date DateTime
  issuance_status    String
  book               Book     @relation("BookToIssuance", fields: [book_id], references: [book_id])
  member             Member   @relation("MemberToIssuance", fields: [issuance_member], references: [mem_id])
}

model Membership {
  membership_id Int    @id @default(autoincrement())
  member_id     Int
  status        String
  member        Member @relation(fields: [member_id], references: [mem_id])
}

model User {
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  id        Int      @id @default(autoincrement())
}
